lines(0:200,rep(th,length(0:200)),col="red",lty=2)
install.packages("car")
library(car)
data(Davis)
Davis
hist(Davis$weight, xlim=c(35,105),breaks=14)
mu <- mean(Davis$weight)
s2 <- mean((Davis$weight-mu)^2)
c(mu, s2)
a <- (Davis$weight-mu)^2/s2
th <- qchisq(0.99, 1) # カイ二乗分布の1%水準の閾値
plot(a,xlab="index",ylab="anomaly score")
lines(0:200,rep(th,length(0:200)),col="red",lty=2)
install.packages("car")
library(car)
data(Davis)
Davis
hist(Davis$weight, xlim=c(35,105),breaks=14)
install.packages("car")
x <- cbind(Davis$weight, Davis$height)
View(x)
plot(X[,1],X[,2],pch=16,xlab="weight",ylab="height")
X <- cbind(Davis$weight, Davis$height)
plot(X[,1],X[,2],pch=16,xlab="weight",ylab="height")
mx <- colMeans(X)
matrix(1,nrow(X),1)
Xc <- X - matrix(1,nrow(X),1) %*%mx
View(Xc)
Xc <- X - matrix(1,nrow(X),1) %*% mx
Sx <- t(Xc) %*% Xc / nrow(X)
a <- rowSums((Xc %*% solve(Sx)) * Xc)
a <- rowSums((Xc %*% solve(Sx)) * Xc)
plot(a,xlab="index",ylab="anomaly score")
lines(0:200,rep(th,length(0:200)),col="red",lty=2)
library(MASS)
X <- road / road$drivers
X <- road / road$drivers
X <- as.matrix(log(X[,-2] +1))
mx <- colMeans(X)
Xc <- X - matrix(1,nrow(X),1) %*% mx
Sx <- t(Xc) %*% Xc / nrow(X)
a <- rowSums((Xc %*% solve(Sx)) * Xc)/ncol(x)
plot(a,xlab="index",ylab="anomaly score",ylim=x(-1,30)/ncol(X))
plot(a,xlab="index",ylab="anomaly score",ylim=X(-1,30)/ncol(X))
X <- road / road$drivers
X <- as.matrix(log(X[,-2] +1))
mx <- colMeans(X)
Xc <- X - matrix(1,nrow(X),1) %*% mx
Sx <- t(Xc) %*% Xc / nrow(X)
a <- rowSums((Xc %*% solve(Sx)) * Xc)/ncol(x)
plot(a,xlab="index",ylab="anomaly score",ylim=X(-1,30)/ncol(X))
plot(a,xlab="index",ylab="anomaly score",ylim=c(-1,30)/ncol(X))
lines(0:30,rep(1,length(0:30)),col="red",lty=2)
xc_prime <- Xc["Calif,"]
SN1 <- 10*log10(xc_prime^2/diag(Sx))
barplot(SN1)
barplot(SN1,ylim=(-10,10))
xc_prime <- Xc["Calif",]
SN1 <- 10*log10(xc_prime^2/diag(Sx))
barplot(SN1)
xc_prime <- Xc["DC",]
SN1 <- 10*log10(xc_prime^2/diag(Sx))
barplot(SN1)
install.packages("car")
library(car)
data(Davis)
Davis
N <- length(Davis$weight)
mu <- mean(Davis$weight)
# モーメント法による推定
si <- sd(Davis$weight)*(N-1)/N
kmo <- (mu/si)^2
smo <- si^2/mu
# 最尤法による推定
ml <- fitdistr(Davis$weight,"gamma")
kml <- ml$estimate["shape"]
sml <- ml$estimate["rate"]
library(MASS)
N <- length(Davis$weight)
mu <- mean(Davis$weight)
# モーメント法による推定
si <- sd(Davis$weight)*(N-1)/N
kmo <- (mu/si)^2
smo <- si^2/mu
# 最尤法による推定
ml <- fitdistr(Davis$weight,"gamma")
kml <- ml$estimate["shape"]
sml <- ml$estimate["rate"]
sml <- 1/ml$estimate["rate"]
a <- Davis$weight/smo - (kmo-1)*log(Davis$weight/smo)
th <- order(a,decreasing=T)[0.01*N]
plot(a,ylab="anomaly score")
lines(0:200,rep(a[th],length(0:200)),col="red",lty=2)
N <- 1000
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x <- rep(-99,N)
x[which(attr==0)] <- rnorm(length(which(attr==0)),mu0,sig0)
x[which(attr==1)] <- rnorm(length(which(attr==1)),mu1,sig1)
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Generate data
N <- 1000
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Generate data
N <- 1000
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Generate data
N <- 1000
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Generate data
N <- 1000
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Generate data
N <- 1000
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:100){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:50){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
for(iteration in 1:20){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:50){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:20){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Generate data
N <- 1000
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:20){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Generate data
N <- 1000
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Generate data
N <- 1000
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:2){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N*pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N*pi1))
}
# Generate data
N <- 1000
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N*pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N*pi1))
}
