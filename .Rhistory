mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Generate data
N <- 1000
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Generate data
N <- 1000
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Generate data
N <- 1000
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:100){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:50){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
for(iteration in 1:20){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:50){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:20){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Generate data
N <- 1000
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:20){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Generate data
N <- 1000
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Generate data
N <- 1000
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:2){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N+pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N+pi1))
}
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N*pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N*pi1))
}
# Generate data
N <- 1000
pi0 <- 0.6
pi1 <- 0.4
mu0 <- 3
mu1 <- 0
sig0 <- 0.5
sig1 <- 3
attr <- sample(0:1,N,replace=T,prob=c(pi0,pi1))
x <- rep(-99,N)
x[which(attr ==0)] <- rnorm(length(which(attr ==0)),mu0,sig0)
x[which(attr ==1)] <- rnorm(length(which(attr ==1)),mu1,sig1)
# Model presumption
pi0 <- 0.5
pi1 <- 0.5
mu0 <- 5
mu1 <- -5
sig0 <- 1
sig1 <- 5
for(iteration in 1:10){
piN0 <- pi0*dnorm(x,mu0,sig0); piN1 <- pi1*dnorm(x,mu1,sig1)
qn0 <- piN0/(piN0+piN1); qn1 <- piN1/(piN0+piN1)
pi0 <- sum(qn0)/N; pi1 <- sum(qn1)/N
mu0 <- sum(qn0*x)/(N*pi0); mu1 <- sum(qn1*x)/(N*pi1)
sig0 <- sqrt(sum(qn0*(x-mu0)*(x-mu0))/(N*pi0))
sig1 <- sqrt(sum(qn1*(x-mu1)*(x-mu1))/(N*pi1))
}
library(car); library(KernSmooth)
x <- Davis[,c("weight","height")]
h <- c(dpik(x$weight,x$height))
est <- bkde2D(x,bandwidth=h,gridsize=c(10^3,10^3))
d <- list(x=est$x1,y=est$x2,z=est$fhat)
image(d,col=terrain.colors(7),xlim=c(35,110),ylim=c(145,200))
contour(d,add=T)
h <- c(dpik(x$weight),dpik(x$height))
est <- bkde2D(x,bandwidth=h,gridsize=c(10^3,10^3))
d <- list(x=est$x1,y=est$x2,z=est$fhat)
image(d,col=terrain.colors(7),xlim=c(35,110),ylim=c(145,200))
contour(d,add=T)
# 異常度の計算
aa <- colSums(K) - diag(K)
library(mclust); library(car)
X <- Davis[-12,c("weight","height")] # 12番目の異常標本を除去
result <- Mclust(X)
print(summary(result,parameters=TRUE))
plot(result)
install.packages(‘Rcpp’)
install.packages(‘mclust’)
install.packages("mclust")
library(mclust); library(car)
X <- Davis[-12,c("weight","height")] # 12番目の異常標本を除去
result <- Mclust(X)
print(summary(result,parameters=TRUE))
plot(result)
plot(result)
# 異常度の計算
pi <- reuslt$parameters$pro
X <- Davis[,c("weight","height")]
XX <- cdens(modelName=result$modelName,X,parameters=result$parameters)
a <- -log(as.matrix(XX) %*% as.matrix(pi))
plot(a,ylab="anomaly score")
pi <- result$parameters$pro
X <- Davis[,c("weight","height")]
XX <- cdens(modelName=result$modelName,X,parameters=result$parameters)
a <- -log(as.matrix(XX) %*% as.matrix(pi))
plot(a,ylab="anomaly score")
library(kernlab);
install.packages("kernlab")
library(kernlab);
x <- rbind(matrix(rnorm(120),ncol=2),matrix(rnorm(120,mean=3),ncol=2))
x <- scale(x)
x <- rbind(matrix(rnorm(120),ncol=2),matrix(rnorm(120,mean=3),ncol=2))
x <- scale(x)
rbf <- rbfdot(sigma=0.5)
ocsvm <- ksvm(x,type="one-svc",kernel=rbf,nu=0.1)
colorcode <- rep(0,nrow(x))
colorcode[ocsvm@alphaindex] <- 1
plot(x,pch=21,bg=colorcode)
x <- rbind(matrix(rnorm(120),ncol=2),matrix(rnorm(120,mean=3),ncol=2))
x <- scale(x)
rbf <- rbfdot(sigma=0.5)
ocsvm <- ksvm(x,type="one-svc",kernel=rbf,nu=0.2)
colorcode <- rep(0,nrow(x))
colorcode[ocsvm@alphaindex] <- 1
plot(x,pch=21,bg=colorcode)
x <- rbind(matrix(rnorm(120),ncol=2),matrix(rnorm(120,mean=3),ncol=2))
x <- scale(x)
rbf <- rbfdot(sigma=0.5)
ocsvm <- ksvm(x,type="one-svc",kernel=rbf,nu=0.05)
colorcode <- rep(0,nrow(x))
colorcode[ocsvm@alphaindex] <- 1
plot(x,pch=21,bg=colorcode)
x <- rbind(matrix(rnorm(120),ncol=2),matrix(rnorm(120,mean=3),ncol=2))
x <- scale(x)
rbf <- rbfdot(sigma=0.5)
ocsvm <- ksvm(x,type="one-svc",kernel=rbf,nu=0.1)
colorcode <- rep(0,nrow(x))
colorcode[ocsvm@alphaindex] <- 1
plot(x,pch=21,bg=colorcode)
library(MASS)
cc <- c("Min.Price","Price","Max.Price","MPG.city","MPG.highway","EngineSize","Horsepower","RPM",
"Rev.per.mile","Fuel.tank.capacity","Length","Wheelbase","Width","Turn.circle","Weight")
mask <- is.element(colnames(Cars93),cc)
mask <- is.element(colnames(Cars93),cc)
Xc <- t(scale(Cars93[,mask]))
S <- Xc %*% t(Xc); evd <- eigen(S)
plot(evd$values,type="b",xlab="index",ylab="eigenvalue")
m <- 2
x2 <- t(evd$vectors[,1:m]) %*% Xc
tmp <- X2*x2
tmp <- x2*x2
a1 <- colSums(Xc*Xc) - colSums(X2*X2)
a1 <- colSums(Xc*Xc) - colSums(x2*x2)
idx <- order(a1,decreasing=T)[1:6]; print(a1[idx])
G <- t(Xc) %*% Xc; evd <- eigen(G)
Lam_12 <- diag(evd$values[1:m]^(-1/2))
xx2 <- Lam_12 %*% t(evd$vectors[,1:m]) %*% t(Xc) %*% Xc
aa1 <- colSums(Xc*Xc) - colSums(xx2*xx2)
idx <- order(aa1,decreasing=T)[1:6]; print(aa1[idx])
library(MASS)
X <- UScrime[,-c(2,16)]; M <- ncol(X)
y <- UScrime[,16]; N <- length(y)
library(MASS)
X <- UScrime[,-c(2,16)]; M <- ncol(X)
y <- UScrime[,16]; N <- length(y)
lambdas <- seq(0,5,length=50) # λの候補
model <- lm.ridge(y ~.,cbind(X,y),lambda=lambdas)
bestIdx <- which.min(model$GCV)
coefs <- coef(model)[bestIdx,]
lam <- model$lambda[bestIdx]
ypred <- as.matrix(X)%*%as.matrix(coefs[2:15])+coefs[1]
plot(y,ypred,pch=16,xlab="y",xlab="y_pred")
plot(y,ypred,pch=16)
plot(y,ypred,pch=16,xlab="label",xlab="y_pred")
plot(y,ypred,pch=16,xlab="y_label",xlab="y_pred")
plot(y,ypred,pch=16,xlab="y_label",ylab="y_pred")
sig2 <- (lam*sum(coefs[2:15]^2)+sum(as.numeric(ypred)-y)^2)/N
X_ <- t(scale(X,scale=F))
H <- t(X_) %*% solve(X_%*%t(X_)+lam*diag(M),X_)
TrHN <- sum(diag(H))/N
a <- (as.numeric(y_pred)-y)^2/((1-TrHN)^2*sig2)
plot(a,xlab="index",ylab="anomaly score")
th <- sort(a)[N*(1-0.05)]
lines(0:50,rep(th,length),col="red",lty=2)
sig2 <- (lam*sum(coefs[2:15]^2)+sum(as.numeric(ypred)-y)^2)/N
X_ <- t(scale(X,scale=F))
H <- t(X_) %*% solve(X_%*%t(X_)+lam*diag(M),X_)
TrHN <- sum(diag(H))/N
a <- (as.numeric(ypred)-y)^2/((1-TrHN)^2*sig2)
plot(a,xlab="index",ylab="anomaly score")
th <- sort(a)[N*(1-0.05)]
lines(0:50,rep(th,length),col="red",lty=2)
lines(0:50,rep(th,length(0:50)),col="red",lty=2)
library(FNN)
X <- read.table(file="C:/data/qtbase102.txt")
install.packages("FNN")
library(FNN)
X <- read.table(file="C:/data/qtbase102.txt")
X <- read.table(file="./ECG_data/xmitdb_x108_0.txt")
X <- read.table(file="../ECG_data/xmitdb_x108_0.txt")
X <- read.table(file="../ECG_data/xmitdb_x108_0.txt")
w <- 100; nk <- 1 # 窓幅と近傍数
Xtr <- X[1:3000,2]; Dtr <- embed(Xtr,w)
X <- X[3001:6000,2]; D <- embed(X,w)
d <- knnx.dist(Dtr,Dk,k=nk); a <- d[,1]
d <- knnx.dist(Dtr,D,k=nk); a <- d[,1]
X <- read.table(file="../ECG_data/stdb_308_0.txt")
w <- 100; nk <- 1 # 窓幅と近傍数
Xtr <- X[1:3000,2]; Dtr <- embed(Xtr,w)
X <- X[3001:6000,2]; D <- embed(X,w)
d <- knnx.dist(Dtr,D,k=nk); a <- d[,1]
X <- read.table(file="../ECG_data/mitdb__100_180.txt")
w <- 100; nk <- 1 # 窓幅と近傍数
Xtr <- X[1:3000,2]; Dtr <- embed(Xtr,w)
X <- X[3001:6000,2]; D <- embed(X,w)
d <- knnx.dist(Dtr,D,k=nk); a <- d[,1]
View(Dtr)
View(D)
X <- read.table(file="../ECG_data/chfdb_chf13_45590txt")
w <- 100; nk <- 1 # 窓幅と近傍数
Xtr <- X[1:3000,2]; Dtr <- embed(Xtr,w)
X <- X[3001:6000,2]; D <- embed(X,w)
d <- knnx.dist(Dtr,D,k=nk); a <- d[,1]
X <- read.table(file="../ECG_data/chfdb_chf13_45590.txt")
w <- 100; nk <- 1 # 窓幅と近傍数
Xtr <- X[1:3000,2]; Dtr <- embed(Xtr,w)
X <- X[3001:6000,2]; D <- embed(X,w)
d <- knnx.dist(Dtr,D,k=nk); a <- d[,1]
X <- read.table(file="../ECG_data/chfdb_chf01_275.txt")
w <- 100; nk <- 1 # 窓幅と近傍数
Xtr <- X[1:3000,2]; Dtr <- embed(Xtr,w)
X <- X[3001:6000,2]; D <- embed(X,w)
d <- knnx.dist(Dtr,D,k=nk); a <- d[,1]
X <- read.table(file="../ECG_data/qtdbsel102.txt")
w <- 100; nk <- 1 # 窓幅と近傍数
Xtr <- X[1:3000,2]; Dtr <- embed(Xtr,w)
X <- X[3001:6000,2]; D <- embed(X,w)
d <- knnx.dist(Dtr,D,k=nk); a <- d[,1]
plot(a,ylab="anomaly score",type="1")
plot(a,ylab="anomaly score",type=1)
plot(a,ylab="anomaly score")
plot(a,ylab="anomaly score",type="1")
plot(a,ylab="anomaly score",type="I")
plot(a,ylab="anomaly score",type="l")
xi <- dt[3001:6000,2]
w <- 50; m <- 2; k <- w/2; L <- k/2; Tt < length(xi)
score <- rep(0,Tt)
for(t in (w+k):(Tt-L+1)){
tstart <- t-w-k+1; tend <- t-1
X1 <- t(embed(xi[tstart:tend],w))
X1 <- X1[w:1,]
tstart <- t-w-k+1+L; tend <- t-1+l
X2 <- t(embed(xi[tstart:tend],w))
X2 <- X2[w:1,]
U1 <- svd(X1)$u[,1:m]
U2 <- svd(X2)$u[,1:m]
sig1 <- svd(t(U1)%*%U2)$d[1]
score[t] <- 1 - sig1^2
}
w <- 50; m <- 2; k <- w/2; L <- k/2; Tt <- length(xi)
score <- rep(0,Tt)
for(t in (w+k):(Tt-L+1)){
tstart <- t-w-k+1; tend <- t-1
X1 <- t(embed(xi[tstart:tend],w))
X1 <- X1[w:1,]
tstart <- t-w-k+1+L; tend <- t-1+l
X2 <- t(embed(xi[tstart:tend],w))
X2 <- X2[w:1,]
U1 <- svd(X1)$u[,1:m]
U2 <- svd(X2)$u[,1:m]
sig1 <- svd(t(U1)%*%U2)$d[1]
score[t] <- 1 - sig1^2
}
w <- 50; m <- 2; k <- w/2; L <- k/2; Tt <- length(xi)
xi <- dt[3001:6000,2]
w <- 50; m <- 2; k <- w/2; L <- k/2; Tt <- length(xi)
xi <- dt[3001:6000,2]
dt <- read.table(file="../ECG_data/qtdbsel102.txt")
xi <- dt[3001:6000,2]
w <- 50; m <- 2; k <- w/2; L <- k/2; Tt <- length(xi)
score <- rep(0,Tt)
for(t in (w+k):(Tt-L+1)){
tstart <- t-w-k+1; tend <- t-1
X1 <- t(embed(xi[tstart:tend],w))
X1 <- X1[w:1,]
tstart <- t-w-k+1+L; tend <- t-1+l
X2 <- t(embed(xi[tstart:tend],w))
X2 <- X2[w:1,]
U1 <- svd(X1)$u[,1:m]
U2 <- svd(X2)$u[,1:m]
sig1 <- svd(t(U1)%*%U2)$d[1]
score[t] <- 1 - sig1^2
}
for(t in (w+k):(Tt-L+1)){
tstart <- t-w-k+1; tend <- t-1
X1 <- t(embed(xi[tstart:tend],w))
X1 <- X1[w:1,]
tstart <- t-w-k+1+L; tend <- t-1+L
X2 <- t(embed(xi[tstart:tend],w))
X2 <- X2[w:1,]
U1 <- svd(X1)$u[,1:m]
U2 <- svd(X2)$u[,1:m]
sig1 <- svd(t(U1)%*%U2)$d[1]
score[t] <- 1 - sig1^2
}
plot(score,ylab="anomaly score",type="l")
